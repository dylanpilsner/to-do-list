class t extends HTMLElement{constructor(){super(),this.tags=["h1","p"],this.tag="p",this.shadow=this.attachShadow({mode:"open"}),this.tags.includes(this.getAttribute("tag"))&&(this.tag=this.getAttribute("tag")||this.tag),this.render()}render(){const t=document.createElement(this.tag);t.textContent=this.textContent,this.shadow.appendChild(t)}}customElements.define("my-text",t);class e extends HTMLElement{constructor(){super(),this.checked=!1,this.shadow=this.attachShadow({mode:"open"})}connectedCallback(){this.title=this.getAttribute("title")||"",this.checked=this.hasAttribute("checked"),this.id=this.getAttribute("id"),this.render()}addCallbacks(){this.shadow.querySelector(".checkbox-input").addEventListener("click",(t=>{const e=t.target,n=new CustomEvent("change",{detail:{id:this.id,value:e.checked}});this.dispatchEvent(n)}));this.shadow.querySelector(".root").addEventListener("click",(t=>{const e=t.target;e.classList.toggle("open"),e.classList.toggle("closed");const n=e.getAttribute("class"),s=this.shadow.querySelector(".bi");"root open"==n?(s.style.display="initial",e.style.border="solid 2px"):"root closed"==n&&(s.style.display="none",e.style.border="none")}));this.shadow.querySelector(".bi").addEventListener("click",(()=>{const t=new CustomEvent("delete",{detail:{id:this.id}});this.dispatchEvent(t)}))}render(){this.shadow.innerHTML=`\n    <div class="root closed">\n    <h4 class='${this.checked?"checked":""}'>${this.title}</h4>\n    <div class="makers">\n      <input class="checkbox-input" type="checkbox" ${this.checked?"checked":""} />\n      <img class="bi" src="https://lio-n.github.io/dwf-m5-noteApp/trash-icon.afb2ef45.svg" alt="foto">\n    </div>\n  </div>\n    `;const t=document.createElement("style");t.innerHTML="\n    *{\n      box-sizing: border-box; \n    }\n\n    .makers{\n      display:flex;\n      flex-direction:column;\n      align-items:center;\n      justify-content:space-between;\n    }\n\n    .bi{\n      margin-bottom:15px;\n      display:none;\n      height:25px;\n      width:25px;\n    }\n\n    h4{\n      height:20px\n    }\n\n    .root{\n      display:flex;\n      justify-content:space-between;\n      font-size:18px;\n      border-radius: 4px;\n      padding: 0px 13px;\n      background-color: #fff599;\n      height:112px;\n      width:100%;\n      max-width:312px;\n    }\n    .checkbox-input{\n      margin-top:20px;\n      height:20px;\n      width:20px;\n    }\n\n    h4.checked{\n      text-decoration: line-through;\n    }\n    ",this.shadow.appendChild(t),this.addCallbacks()}}customElements.define("todo-item",e);class n extends HTMLElement{constructor(){super(),this.render()}render(){const t=this.attachShadow({mode:"open"}),e=document.createElement("div"),n=document.createElement("style");n.innerHTML="\n.header{\n  width:100%;\n  height:60px;\n  background-color:#FF8282;\n  font-size:22px;\n  font-weight:500;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n}\n",e.innerHTML='\n      <div class="header"></div>\n      ',t.appendChild(e),t.appendChild(n)}}customElements.define("custom-header",n);const s={data:{tasks:[{title:"Bienvenido! PodÃ©s agregar una nota, marcarla como realizada, o eliminarla.",id:1}]},listeners:[],init(){const t=JSON.parse(localStorage.getItem("saved-state"));this.setState(t)},getState(){return this.data},getEnabledTasks(){console.log(this.getState());return this.getState().tasks.filter((t=>!t.deleted))},addTask(t,e){const n=this.getState();n.tasks.push({id:t,title:e,completed:!1}),this.setState(n)},changeItemState(t,e){const n=this.getState();n.tasks.find((e=>e.id==t)).completed=e,this.setState(n)},deleteTask(t){const e=this.getState();e.tasks.find((e=>e.id==t)).deleted=!0,this.setState(e)},setState(t){this.data=t;for(let e of this.listeners)e(t);localStorage.setItem("saved-state",JSON.stringify(t))},subscribe(t){this.listeners.push(t)}};!function(){const t=document.querySelector(".root");s.init(),function(t){const e=document.createElement("div"),n=s.getEnabledTasks();e.innerHTML='\n  <custom-header></custom-header>\n  <div class="main-container">\n  <h1 class="title">Mis pendientes</h1>\n  <form class="my-form">\n  <label class="label">\n  <div class="label-input">\n  <div class="label-data">Nuevo pendiente</div>\n  <input class="task-input" type"text" name="task" />\n  </div>\n  <button class="add-button">Agregar</button>\n  </label>\n  </form>\n  <ul class="lista">\n  </ul>\n  </div>\n  ';const i=e.querySelector(".lista");function a(t){i.innerHTML="";for(const e of t){const t=document.createElement("todo-item");t.setAttribute("title",e.title),t.setAttribute("id",e.id),e.completed&&t.setAttribute("checked","true"),t.addEventListener("delete",(t=>{s.deleteTask(t.detail.id)})),t.addEventListener("change",(t=>{s.changeItemState(t.detail.id,t.detail.value)})),i.appendChild(t)}}s.subscribe((()=>{a(s.getEnabledTasks())})),a(n),e.querySelector(".my-form").addEventListener("submit",(t=>{t.preventDefault();const e=t.target;s.addTask(Math.random(),e.task.value),e.task.value=""})),t.appendChild(e)}(t)}();
//# sourceMappingURL=index.5d69be13.js.map
